"""
Django settings for medical_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os , json
from google.oauth2 import service_account


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2vkel*^+rjo4_k$m%$#)i55r+_0(mep^=d-d01%w2itz-@zamo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rag_ai',
    'users',
    "edu",
    "web",
    "pgvector.django",
    'rest_framework_simplejwt',
    "cloudinary",
    "cloudinary_storage",
    "ckeditor",
    "ckeditor_uploader",
    "storages",

    "whitenoise.runserver_nostatic",

]

# CKEDITOR_STORAGE_BACKEND = "cloudinary_storage.storage.MediaCloudinaryStorage"
CKEDITOR_STORAGE_BACKEND = "storages.backends.gcloud.GoogleCloudStorage"



# بيانات GCS
GS_BUCKET_NAME = config("GS_BUCKET_NAME")
GS_DEFAULT_ACL = None
GS_FILE_OVERWRITE = False
GS_QUERYSTRING_AUTH = False  # لأن البكت عام
MEDIA_URL = f"https://storage.googleapis.com/{GS_BUCKET_NAME}/"

# الكريدنشلز (الصق JSON كامل في متغير بيئة GCS_CREDENTIALS_JSON)
GS_CREDENTIALS = service_account.Credentials.from_service_account_info(
    json.loads(config("GCS_CREDENTIALS_JSON"))
)


CLOUDINARY_STORAGE = {
    "CLOUD_NAME":  config("CLOUDINARY_CLOUD_NAME"),
    "API_KEY":     config("CLOUDINARY_API_KEY"),
    "API_SECRET":  config("CLOUDINARY_API_SECRET"),
    "RESOURCE_TYPE": "image",
}

# CKEditor
CKEDITOR_UPLOAD_PATH = "uploads/"     


CKEDITOR_CONFIGS = {
    "default": {
        "height": 450,
        "width": "100%",
        "allowedContent": True,
        "extraPlugins": "ytembed",      # عشان زر YouTube يظهر
        "toolbar": "Full",              # استخدم التولبار الكامل
        "toolbar_Full": [
            ['Source','Maximize','-','Preview','Print','Templates'],
            ['Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo'],
            ['Find','Replace','SelectAll','Scayt'],
            ['Form','Checkbox','Radio','TextField','Textarea','Select','Button','ImageButton','HiddenField'],
            '/',
            ['Bold','Italic','Underline','Strike','Subscript','Superscript','-','RemoveFormat'],
            ['NumberedList','BulletedList','-','Outdent','Indent','Blockquote','CreateDiv'],
            ['JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'],
            ['BidiLtr','BidiRtl'],
            ['Link','Unlink','Anchor'],
            ['Image','Flash','Table','HorizontalRule','Smiley','SpecialChar','PageBreak','Iframe'],
            ['YouTube'],  # ← زر اليوتيوب من البلجن
            '/',
            ['Styles','Format','Font','FontSize'],
            ['TextColor','BGColor'],
            ['ShowBlocks']
        ],
    }
}



STORAGES = {
    # "default": {"BACKEND": "cloudinary_storage.storage.MediaCloudinaryStorage"},
    "default": {"BACKEND": "storages.backends.gcloud.GoogleCloudStorage"},
    "staticfiles": {"BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"},
}


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticated",  # هنسيبها كده مبدئيًا
    ),
}

from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),   # عدّل حسب رغبتك
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "AUTH_HEADER_TYPES": ("Bearer",),
}














MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'medical_project.urls'
AUTH_USER_MODEL = 'users.User'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'medical_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'medical_ai',
        'USER': 'ahmed',
        'PASSWORD': 'Upcomingrich@1',
        'HOST': '31.97.58.109',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"]

# # === Media (محليًا) ===
# MEDIA_URL = "/media/"
# MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# === Environment / RAG settings ===
GOOGLE_API_KEY= config("GOOGLE_API_KEY", default="AIzaSyC0ZNNgnaokxprH5jBnxwdTUZjWS-1iegw")
FAISS_INDEX_FILE   = config("FAISS_INDEX_FILE", default=os.path.join(BASE_DIR, "faiss_index.index"))
GEMINI_EMBED_MODEL = config("GEMINI_EMBED_MODEL", default="text-embedding-004")   # بُعد 768
GEMINI_GEN_MODEL   = config("GEMINI_GEN_MODEL", default="gemini-2.5-flash-lite")








BASE_API_URL  = config("BASE_API_URL", default="http://localhost:8000/api")
WEB_DEVICE_ID = config("WEB_DEVICE_ID", default="")  # لو فاضي هنولّد واحد بالسيشن